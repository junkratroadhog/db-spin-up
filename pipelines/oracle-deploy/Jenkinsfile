pipeline {
    agent any

    parameters {
        string(name: 'CONFIG', defaultValue: '', description: 'Comma separated config key=value pairs')
    }

    environment {
        ORACLE_IMAGE = 'gvenzl/oracle-xe'   // default
        ORACLE_CNAME = 'oracle-db'          // default
        ORACLE_PASSWORD = 'oracle'          // default
        ORACLE_PORT = 1521                  // default
        RETAIN_DB = 'false'                 // default
        // ORACLE_PDB = 'USERS'                                 // This parameter wont work
        // ORACLE_HOME = '/opt/oracle/product/21c/dbhome_1'     // This parameter wont work
    }

    stages {

        stage('Parse Config') {
            steps {
                script {
                    params.CONFIG.split(',').each { kv ->
                        def (k,v) = kv.split('=')
                        env."${k.trim()}" = v.trim()
                    }
                }
            }
        }

        stage('Scripts List and Permission check') {
            steps{
                sh 'chmod +x scripts/deploy/*.sh'
            }
        }

        stage("Creating Oracle DB in Docker Container") {
            steps {
                sh '''
                ./scripts/deploy/deploy_create_oracle_container.sh
                '''
            }
        }

        stage('Validating Oracle DB in Container') {
            steps {
                    sh '''
                    ./scripts/deploy/deploy_validate_oracle_container.sh
                    '''
            } 
        }

        stage('Validation of DB & Listener Status'){
            steps{
                sh '''
                    ./scripts/deploy/deploy_final_validate.sh
                '''
            }
        }
    }

    post {
        always {
            sh ''' 
                echo "Cleaning up..."
                if [ "${RETAIN_DB}" != "true" ]; then
                    docker stop ${ORACLE_CNAME}
                    docker rm ${ORACLE_CNAME}
                fi
            '''
        }
    }      
}